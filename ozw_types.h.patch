--- ozw_types.h.orig	2016-10-01 00:24:22.905140350 -0700
+++ ozw_types.h	2016-10-01 00:28:21.602546099 -0700
@@ -9,6 +9,8 @@
 
 #include <iosfwd>
 
+#include <cstddef>
+using std::size_t;
 #include <thrift/Thrift.h>
 #include <thrift/TApplicationException.h>
 #include <thrift/TBase.h>
@@ -185,6 +187,22 @@
   }
 
   virtual ~RemoteValueID() throw();
+
+  // Thrift4OZW: constructor from ValueID
+  RemoteValueID(ValueID vid) :
+    _homeId ((int32_t) vid.GetHomeId()),
+    _nodeId ((int8_t) vid.GetNodeId()),
+    _genre  ((RemoteValueGenre::type) vid.GetGenre()),
+    _commandClassId((int8_t) vid.GetCommandClassId()),
+    _instance ((int8_t) vid.GetInstance()),
+    _valueIndex((int8_t) vid.GetIndex()),
+    _type ((RemoteValueType::type) vid.GetType()) { }
+
+  // Thrift4OZW: converter to ValueID
+  ValueID toValueID() const {
+    return ValueID((uint32)_homeId, (uint8)_nodeId, (ValueID::ValueGenre)_genre, (uint8)_commandClassId, (uint8)_instance, (uint8)_valueIndex, (ValueID::ValueType)_type);
+  }
+
   int32_t _homeId;
   int8_t _nodeId;
   RemoteValueGenre::type _genre;
